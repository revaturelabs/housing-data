//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Housing.Data.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HousingDB_DevEntities : DbContext
    {
        public HousingDB_DevEntities()
            : base("name=HousingDB_DevEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Associate> Associates { get; set; }
        public virtual DbSet<Batch> Batches { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<HousingComplex> HousingComplexes { get; set; }
        public virtual DbSet<HousingData> HousingDatas { get; set; }
        public virtual DbSet<HousingUnit> HousingUnits { get; set; }
    
        [DbFunction("HousingDB_DevEntities", "HousingData_By_Unit")]
        public virtual IQueryable<HousingData_By_Unit_Result> HousingData_By_Unit(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("unitId", unitId) :
                new ObjectParameter("unitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HousingData_By_Unit_Result>("[HousingDB_DevEntities].[HousingData_By_Unit](@unitId)", unitIdParameter);
        }
    
        [DbFunction("HousingDB_DevEntities", "HousingUnit_By_Complex")]
        public virtual IQueryable<HousingUnit_By_Complex_Result> HousingUnit_By_Complex(Nullable<int> complexId)
        {
            var complexIdParameter = complexId.HasValue ?
                new ObjectParameter("complexId", complexId) :
                new ObjectParameter("complexId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HousingUnit_By_Complex_Result>("[HousingDB_DevEntities].[HousingUnit_By_Complex](@complexId)", complexIdParameter);
        }
    }
}
